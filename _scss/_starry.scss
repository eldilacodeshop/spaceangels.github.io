// Configuration

$animation-time: 350s; // How long it takes for the stars to move all the way
$star-size: 3px; // How big the biggest stars are

// Modified from https://codepen.io/saransh/pen/BKJun

// n is number of stars required
@function multiple-box-shadow($n) {
  $value: "#{random(2000)}px #{random(2000)}px #FFF";

  @for $i from 2 through $n {
    $value: "#{$value} , #{random(2000)}px #{random(2000)}px #FFF";
  }

  @return unquote($value);
}

$shadows-small: multiple-box-shadow(700);
$shadows-medium: multiple-box-shadow(200);
$shadows-big: multiple-box-shadow(100);


// Create animations times for each starfield
$atime1: 1 * $animation-time;
$atime2: 2 * $animation-time;
$atime3: 3 * $animation-time;

// Create star sizes for each starfield
$ssize1: $star-size / 3;
$ssize2: $star-size / 2;
$ssize3: $star-size / 1;

#stars {
  width: $ssize1;
  height: $ssize1;
  background: transparent;
  box-shadow: $shadows-small;
  animation: animStar $atime1 linear infinite;

  &:after {
    content: " ";
    position: absolute;
    top: 2000px;
    width: $ssize1;
    height: $ssize1;
    background: transparent;
    box-shadow: $shadows-small;
  }
}

#stars2 {
  width: $ssize2;
  height: $ssize2;
  background: transparent;
  box-shadow: $shadows-medium;
  animation: animStar $atime2 linear infinite;

  &:after {
    content: " ";
    position: absolute;
    top: 2000px;
    width: $ssize2;
    height: $ssize2;
    background: transparent;
    box-shadow: $shadows-medium;
  }
}

#stars3 {
  width: $ssize3;
  height: $ssize3;
  background: transparent;
  box-shadow: $shadows-big;
  animation: animStar $atime3 linear infinite;

  &:after {
    content: " ";
    position: absolute;
    top: 2000px;
    width: $ssize3;
    height: $ssize3;
    background: transparent;
    box-shadow: $shadows-big;
  }
}

@keyframes animStar {
  from {
    transform: translateY(0px);
  }

  to {
    transform: translateY(-2000px);
  }
}
